surge {
  akka {
    cluster {
      enabled = true
    }
  }
}

### akka-remoting config

# akka {
#   actor {
#     provider = "remote"
#   }
#
#   remote {
#     artery {
#       enabled = on
#       transport = tcp
#
#       # This is the hostname this instance uses to advertise itself to peers
#       canonical.hostname = ${?AKKA_REMOTING_HOST}
#       bind.hostname = ${?AKKA_REMOTING_HOST}
#       canonical.port = ${?AKKA_REMOTING_PORT}
#       bind.port = ${?AKKA_REMOTING_PORT}
#     }
#     log-remote-lifecycle-events = off
#   }
# }

###

### akka-cluster local config

# akka {
#   actor {
#     provider = "cluster"
#   }
#   remote.artery {
#     enabled = on
#     log-remote-lifecycle-events = off
#     canonical {
#       hostname = "127.0.0.1"
#       port = 2551
#       port = ${?AKKA_CLUSTER_PORT}
#     }
#   }
#
#   cluster {
#     seed-nodes = [
#       "akka://bank-accountActorSystem@127.0.0.1:2551",
#       "akka://bank-accountActorSystem@127.0.0.1:2552",
#       "akka://bank-accountActorSystem@127.0.0.1:2553"
#     ]
#     downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
#     sharding {
#       retry-interval = 200ms
#       waiting-for-state-timeout = 200ms
#     }
#   }
# }
#
# akka.management {
#   http {
#     hostname = "127.0.0.1"
#     port = 8551
#     port = ${?AKKA_MANAGEMENT_PORT}
#     bind-hostname = "0.0.0.0"
#   }
# }

###

### akka-cluster kubernetes config

akka {
  management {
    http {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      port = 8558
      port = ${?AKKA_MANAGEMENT_PORT}

      bind-hostname = "0.0.0.0"
      bind-port = 8558
      bind-port = ${?AKKA_MANAGEMENT_PORT}
    }
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
        required-contact-point-nr = 1
        required-contact-point-nr = ${?REQUIRED_CONTACT_POINT_NR}
      }
    }
  }

  discovery {
    method = kubernetes-api
    kubernetes-api {
      pod-label-selector = "app=%s"
      pod-port-name = "management"
      pod-namespace = ${NAMESPACE}
    }
  }

  actor {
    provider = "cluster"
  }

  remote.artery {
    enabled = on
    canonical {
      hostname = "127.0.0.1"
      hostname = ${?HOSTNAME}
      port = 2552
      port = ${?AKKA_REMOTING_PORT}
    }
    bind {
      hostname = "0.0.0.0"
      port = 2552
      port = ${?AKKA_REMOTING_PORT}
    }
  }

  cluster {
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    sharding {
      retry-interval = 200ms
      waiting-for-state-timeout = 200ms
    }
  }
}

http {
  host = "0.0.0.0"
  host = ${?BANK_ACCOUNT_HOST}
  port = 8080
  port = ${?BANK_ACCOUNT_PORT}
}