apiVersion: v1
kind: Service
metadata:
  name: scala-app
  labels:
    app: bank-account-scala
spec:
  ports:
    - port: 8080
      name: scala-app
      targetPort: 8080
  selector:
    app: bank-account-scala
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bank-account-scala
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  replicas: 2
  selector:
    matchLabels:
      app: bank-accountActorSystem
  template:
    metadata:
      labels:
        app: bank-accountActorSystem
        actorSystemName: bank-accountActorSystem
    spec:
      containers:
        - name: scala-app
          image: surge-scala-sample:0.1.0-SNAPSHOT
          imagePullPolicy: Never
          readinessProbe:
            httpGet:
              path: /ready
              port: management
          livenessProbe:
            httpGet:
              path: /alive
              port: management
          ports:
            - name: remoting
              containerPort: 2552
              protocol: TCP
            - name: management
              containerPort: 8558
              protocol: TCP
            - containerPort: 8080
              name: scala-app
              protocol: TCP
          env:
            - name: "AKKA_REMOTING_PORT"
              value: "2552"
            - name: "SURGE_ADVERTISED_HOSTNAME"
              value: "<getKubernetesPodAddress>"
            - name: "SURGE_BIND_HOSTNAME"
              value: "0.0.0.0"
            - name: "SURGE_KUBERNETES_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: "AKKA_CLUSTER_BOOTSTRAP_SERVICE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: "metadata.labels['app']"
            - name: "HOSTNAME"
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: "BANK_ACCOUNT_HOST"
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: "BANK_ACCOUNT_PORT"
              value: "8080"
            - name: "KAFKA_BROKERS"
              value: "my-cluster-kafka-bootstrap:9092"
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
  namespace: kafka
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
  namespace: kafka
subjects:
  # Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
  # For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
  - kind: User
    name: system:serviceaccount:kafka:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io